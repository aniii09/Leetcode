class Solution {
public:
//code Aniii
    vector<int> ans;
    int n;
    void f(int i){
        if (i>n) return;
        if (i>0) ans.push_back(i);
        for(int j=(i==0)?1:0; j<=9; j++){
            int x=10*i+j;
            if (x>n) break;
            f(x);
        }
    }
    vector<int> lexicalOrder(int n) {
        this->n=n;
        ans.reserve(n);
        f(0);
        return ans;
    }
};

---------------------------------------------------------------------------------------

qs-

Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.

You must write an algorithm that runs in O(n) time and uses O(1) extra space. 

 

Example 1:

Input: n = 13
Output: [1,10,11,12,13,2,3,4,5,6,7,8,9]
Example 2:

Input: n = 2
Output: [1,2]
 

Constraints:

1 <= n <= 5 * 104
